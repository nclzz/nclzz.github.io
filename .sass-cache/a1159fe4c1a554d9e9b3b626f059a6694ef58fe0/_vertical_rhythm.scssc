3.2.0.alpha.275 (Bleeding Edge)
4d841ba3188ec7fb4d64ce5dbeffee4b3766dc72
o:Sass::Tree::RootNode
:@template"Î"@import "compass/layout/grid-background";

// The base font size.
$base-font-size: 16px !default;

// The base line height determines the basic unit of vertical rhythm.
$base-line-height: 24px !default;

// Set the default border style for rhythm borders.
$default-rhythm-border-style: solid !default;

// The default font size in all browsers.
$browser-default-font-size: 16px;

// Set to false if you want to use absolute pixels in sizing your typography.
$relative-font-sizing: true !default;

// Allows the `adjust-font-size-to` mixin and the `lines-for-font-size` function
// to round the line height to the nearest half line height instead of the
// nearest integral line height to avoid large spacing between lines.
$round-to-nearest-half-line: false !default;

// Ensure there is at least this many pixels
// of vertical padding above and below the text.
$min-line-padding: 2px !default;

// $base-font-size but in your output unit of choice.
// Defaults to 1em when `$relative-font-sizing` is true.
$font-unit: if($relative-font-sizing, 1em, $base-font-size) !default;

// The basic unit of font rhythm.
$base-rhythm-unit: $base-line-height / $base-font-size * $font-unit;

// The leader is the amount of whitespace in a line.
// It might be useful in your calculations.
$base-leader: ($base-line-height - $base-font-size) * $font-unit / $base-font-size;

// The half-leader is the amount of whitespace above and below a line.
// It might be useful in your calculations.
$base-half-leader: $base-leader / 2;

// True if a number has a relative unit.
@function relative-unit($number) {
  @return unit($number) == "%" or unit($number) == "em" or unit($number) == "rem"
}

// True if a number has an absolute unit.
@function absolute-unit($number) {
  @return not (relative-unit($number) or unitless($number));
}

@if $relative-font-sizing and not relative-unit($font-unit) {
  @warn "$relative-font-sizing is true but $font-unit is set to #{$font-unit} which is not a relative unit.";
}

// Establishes a font baseline for the given font-size.
@mixin establish-baseline($font-size: $base-font-size) {
  // IE 6 refuses to resize fonts set in pixels and it weirdly resizes fonts
  // whose root is set in ems. So we set the root font size in percentages of
  // the default font size.
  * html {
    font-size: 100% * ($font-size / $browser-default-font-size);
  }
  html {
    font-size: $font-size;
    @include adjust-leading-to(1, if($relative-font-sizing, $font-size, $base-font-size));
  }
}

// Resets the line-height to 1 vertical rhythm unit.
// Does not work on elements whose font-size is different from $base-font-size.
//
// @deprecated This mixin will be removed in the next release.
// Please use the `adjust-leading-to` mixin instead.
@mixin reset-baseline {
  @include adjust-leading-to(1, if($relative-font-sizing, $base-font-size, $base-font-size));
}

// Show a background image that can be used to debug your alignments.
// Include the $img argument if you would rather use your own image than the
// Compass default gradient image.
@mixin debug-vertical-alignment($img: false) {
  @if $img {
    background: image-url($img);
  } @else {
    @include baseline-grid-background($base-rhythm-unit);
  }
}

// Adjust a block to have a different font size and line height to maintain the
// rhythm. $lines specifies how many multiples of the baseline rhythm each line
// of this font should use up. It does not have to be an integer, but it
// defaults to the smallest integer that is large enough to fit the font.
// Use $from-size to adjust from a font-size other than the base font-size.
@mixin adjust-font-size-to($to-size, $lines: lines-for-font-size($to-size), $from-size: $base-font-size) {
  @if not $relative-font-sizing and $from-size != $base-font-size {
    @warn "$relative-font-sizing is false but a relative font size was passed to adjust-font-size-to";
  }
  font-size: $font-unit * $to-size / $from-size;
  @include adjust-leading-to($lines, if($relative-font-sizing, $to-size, $base-font-size));
}

// Adjust a block to have different line height to maintain the rhythm.
// $lines specifies how many multiples of the baseline rhythm each line of this
// font should use up. It does not have to be an integer, but it defaults to the
// smallest integer that is large enough to fit the font.
@mixin adjust-leading-to($lines, $font-size: $base-font-size) {
  line-height: rhythm($lines, $font-size);
}

// Calculate rhythm units.
@function rhythm(
  $lines: 1,
  $font-size: $base-font-size,
  $offset: 0
) {
  @if not $relative-font-sizing and $font-size != $base-font-size {
    @warn "$relative-font-sizing is false but a relative font size was passed to the rhythm function";
  }
  $rhythm: $font-unit * ($lines * $base-line-height - $offset) / $font-size;
  // Round the pixels down to nearest integer.
  @if unit($rhythm) == px {
    $rhythm: floor($rhythm);
  }
  @return $rhythm;
}

// Calculate the minimum multiple of rhythm units needed to contain the font-size.
@function lines-for-font-size($font-size) {
  $lines: if($round-to-nearest-half-line,
              ceil(2 * $font-size / $base-line-height) / 2,
              ceil($font-size / $base-line-height));
  @if $lines * $base-line-height - $font-size < $min-line-padding * 2 {
    $lines: $lines + if($round-to-nearest-half-line, 0.5, 1);
  }
  @return $lines;
}

// Apply leading whitespace. The $property can be margin or padding.
@mixin leader($lines: 1, $font-size: $base-font-size, $property: margin) {
  #{$property}-top: rhythm($lines, $font-size);
}

// Apply leading whitespace as padding.
@mixin padding-leader($lines: 1, $font-size: $base-font-size) {
  padding-top: rhythm($lines, $font-size);
}

// Apply leading whitespace as margin.
@mixin margin-leader($lines: 1, $font-size: $base-font-size) {
  margin-top: rhythm($lines, $font-size);
}

// Apply trailing whitespace. The $property can be margin or padding.
@mixin trailer($lines: 1, $font-size: $base-font-size, $property: margin) {
  #{$property}-bottom: rhythm($lines, $font-size);
}

// Apply trailing whitespace as padding.
@mixin padding-trailer($lines: 1, $font-size: $base-font-size) {
  padding-bottom: rhythm($lines, $font-size);
}

// Apply trailing whitespace as margin.
@mixin margin-trailer($lines: 1, $font-size: $base-font-size) {
  margin-bottom: rhythm($lines, $font-size);
}

// Shorthand mixin to apply whitespace for top and bottom margins and padding.
@mixin rhythm($leader: 0, $padding-leader: 0, $padding-trailer: 0, $trailer: 0, $font-size: $base-font-size) {
  @include leader($leader, $font-size);
  @include padding-leader($padding-leader, $font-size);
  @include padding-trailer($padding-trailer, $font-size);
  @include trailer($trailer, $font-size);
}

// Apply a border and whitespace to any side without destroying the vertical
// rhythm. The whitespace must be greater than the width of the border.
@mixin apply-side-rhythm-border($side, $width: 1px, $lines: 1, $font-size: $base-font-size, $border-style: $default-rhythm-border-style) {
  @if not $relative-font-sizing and $font-size != $base-font-size {
    @warn "$relative-font-sizing is false but a relative font size was passed to apply-side-rhythm-border";
  }
  border-#{$side}: {
    style: $border-style;
    width: $font-unit * $width / $font-size;
  };
  padding-#{$side}: rhythm($lines, $font-size, $offset: $width);
}

// Apply borders and whitespace equally to all sides.
@mixin rhythm-borders($width: 1px, $lines: 1, $font-size: $base-font-size, $border-style: $default-rhythm-border-style) {
  @if not $relative-font-sizing and $font-size != $base-font-size {
    @warn "$relative-font-sizing is false but a relative font size was passed to rhythm-borders";
  }
  border: {
    style: $border-style;
    width: $font-unit * $width / $font-size;
  };
  padding: rhythm($lines, $font-size, $offset: $width);
}

// Apply a leading border.
@mixin leading-border($width: 1px, $lines: 1, $font-size: $base-font-size, $border-style: $default-rhythm-border-style) {
  @include apply-side-rhythm-border(top, $width, $lines, $font-size, $border-style);
}

// Apply a trailing border.
@mixin trailing-border($width: 1px, $lines: 1, $font-size: $base-font-size, $border-style: $default-rhythm-border-style) {
  @include apply-side-rhythm-border(bottom, $width, $lines, $font-size, $border-style);
}

// Apply both leading and trailing borders.
@mixin horizontal-borders($width: 1px, $lines: 1, $font-size: $base-font-size, $border-style: $default-rhythm-border-style) {
  @include leading-border($width, $lines, $font-size, $border-style);
  @include trailing-border($width, $lines, $font-size, $border-style);
}

// Alias for `horizontal-borders` mixin.
@mixin h-borders($width: 1px, $lines: 1, $font-size: $base-font-size, $border-style: $default-rhythm-border-style) {
  @include horizontal-borders($width, $lines, $font-size, $border-style);
}
:@options{ :@has_childrenT:@children[Io:Sass::Tree::ImportNode
;0;@:@imported_filename"#compass/layout/grid-background;	[ :
@lineio:Sass::Tree::CommentNode
;@;	[ :
@type:silent:@value["/* The base font size. */;io:Sass::Tree::VariableNode:
@expro:Sass::Script::Number:@denominator_units[ ;@:@original"	16px:@numerator_units["px;i;i	;@;	[ :
@name"base-font-size;i	:@guarded"!defaulto;
;@;	[ ;;;["M/* The base line height determines the basic unit of vertical rhythm. */;io;;o;;[ ;@;"	24px;["px;i;i;@;	[ ;"base-line-height;i;"!defaulto;
;@;	[ ;;;[";/* Set the default border style for rhythm borders. */;io;;o:Sass::Script::String	;@;:identifier;"
solid;i;@;	[ ;" default-rhythm-border-style;i;"!defaulto;
;@;	[ ;;;["1/* The default font size in all browsers. */;io;;o;;[ ;@;"	16px;["px;i;i;@;	[ ;"browser-default-font-size;i;0o;
;@;	[ ;;;["U/* Set to false if you want to use absolute pixels in sizing your typography. */;io;;o:Sass::Script::Bool;@;T;i;@;	[ ;"relative-font-sizing;i;"!defaulto;
;@;	[ ;;;["ä/* Allows the `adjust-font-size-to` mixin and the `lines-for-font-size` function
 * to round the line height to the nearest half line height instead of the
 * nearest integral line height to avoid large spacing between lines. */;io;;o;;@;F;i;@;	[ ;"round-to-nearest-half-line;i;"!defaulto;
;@;	[ ;;;["e/* Ensure there is at least this many pixels
 * of vertical padding above and below the text. */;io;;o;;[ ;@;"2px;["px;i;i;@;	[ ;"min-line-padding;i;"!defaulto;
;@;	[ ;;;["v/* $base-font-size but in your output unit of choice.
 * Defaults to 1em when `$relative-font-sizing` is true. */;i o;;o:Sass::Script::Funcall
;@:@keywords{ :
@args[o:Sass::Script::Variable	:@underscored_name"relative_font_sizing;@;"relative-font-sizing;i"o;;[ ;@;"1em;["em;i;i"o;	; "base_font_size;@;"base-font-size;i";"if;i";@;	[ ;"font-unit;i";"!defaulto;
;@;	[ ;;;[")/* The basic unit of font rhythm. */;i$o;;o:Sass::Script::Operation
;@:@operator:
times:@operand2o;	; "font_unit;@;"font-unit;i%;i%:@operand1o;!
;@;":div;$o;	; "base_font_size;@;"base-font-size;i%;i%;%o;	; "base_line_height;@;"base-line-height;i%;@;	[ ;"base-rhythm-unit;i%;0o;
;@;	[ ;;;["h/* The leader is the amount of whitespace in a line.
 * It might be useful in your calculations. */;i'o;;o;!
;@;";&;$o;	; "base_font_size;@;"base-font-size;i);i);%o;!
;@;";#;$o;	; "font_unit;@;"font-unit;i);i);%o;!
;@;":
minus;$o;	; "base_font_size;@;"base-font-size;i);i);%o;	; "base_line_height;@;"base-line-height;i);@;	[ ;"base-leader;i);0o;
;@;	[ ;;;["z/* The half-leader is the amount of whitespace above and below a line.
 * It might be useful in your calculations. */;i+o;;o;!
;@;";&;$o;;[ ;@;"2;[ ;i;i-;i-;%o;	; "base_leader;@;"base-leader;i-;@;	[ ;"base-half-leader;i-;0o;
;@;	[ ;;;["0/* True if a number has a relative unit. */;i/o:Sass::Tree::FunctionNode;@;T;[[o;; "number;@;"number0;	[o:Sass::Tree::ReturnNode	;o;!
;@;":or;$o;!
;@;":eq;$o;	;@;:string;"rem;i1;i1;%o;
;@;{ ;[o;	; "number;@;"number;i1;"	unit;i1;i1;%o;!
;@;";*;$o;!
;@;";+;$o;	;@;;,;"em;i1;i1;%o;
;@;{ ;[o;	; "number;@;"number;i1;"	unit;i1;i1;%o;!
;@;";+;$o;	;@;;,;"%;i1;i1;%o;
;@;{ ;[o;	; "number;@;"number;i1;"	unit;i1;@;	[ ;i2;"relative-unit;i0o;
;@;	[ ;;;["1/* True if a number has an absolute unit. */;i4o;(;@;T;[[o;; "number;@;"number0;	[o;)	;o:!Sass::Script::UnaryOperation	;@;":not;i6:@operando;!
;@;";*;$o;
;@;{ ;[o;	; "number;@;"number;i6;"unitless;i6;i6;%o;
;@;{ ;[o;	; "number;@;"number;i6;"relative-unit;i6;@;	[ ;i6;"absolute-unit;i5u:Sass::Tree::IfNode¬[o:Sass::Script::Operation
:@options{ :@operator:and:@operand2o:!Sass::Script::UnaryOperation	;@;:not:
@linei9:@operando:Sass::Script::Funcall
;@:@keywords{ :
@args[o:Sass::Script::Variable	:@underscored_name"font_unit;@:
@name"font-unit;i9;"relative-unit;i9;i9:@operand1o;	;"relative_font_sizing;@;"relative-font-sizing;i90[o:Sass::Tree::WarnNode	:
@expro:&Sass::Script::StringInterpolation
:	@mido;	;"font_unit;@;"font-unit;i:;@:@beforeo:Sass::Script::String	;@:
@type:string:@value"<$relative-font-sizing is true but $font-unit is set to ;i:;i::@aftero;	;@;;;"# which is not a relative unit.;i:;@:@children[ ;i:o;
;@;	[ ;;;["?/* Establishes a font baseline for the given font-size. */;i=o:Sass::Tree::MixinDefNode;@;T;[[o;; "font_size;@;"font-sizeo;	; "base_font_size;@;"base-font-size;i>;	[o;
;@;	[ ;;;["³/* IE 6 refuses to resize fonts set in pixels and it weirdly resizes fonts
 * whose root is set in ems. So we set the root font size in percentages of
 * the default font size. */;i?o:Sass::Tree::RuleNode:@parsed_ruleso:"Sass::Selector::CommaSequence:@filename" ;iB:@members[o:Sass::Selector::Sequence;6[o:#Sass::Selector::SimpleSequence
;5@;iB:@sourceso:Set:
@hash{ ;6[o:Sass::Selector::Universal;5@;iB:@namespace0:@subject0o;8
;5@;iB;9o;:;;{ ;6[o:Sass::Selector::Element	;5@;["	html;iB;=0;>0;@;T:
@tabsi ;	[o:Sass::Tree::PropNode;@;@i ;	[ ;o;!
;@;";#;$o;!
;@;";&;$o;	; "browser_default_font_size;@;"browser-default-font-size;iC;iC;%o;	; "font_size;@;"font-size;iC;iC;%o;;[ ;@;"	100%;["%;ii;iC;["font-size;iC:@prop_syntax:new;iB:
@rule["* htmlo;2;3o;4;5" ;iE;6[o;7;6[o;8
;5@+;iE;9o;:;;{ ;6[o;?	;5@+;["	html;iE;=0;>0;@;T;@i ;	[o;A;@;@i ;	[ ;o;	; "font_size;@;"font-size;iF;["font-size;iF;B;Co:Sass::Tree::MixinNode;@;{ ;[o;;@;@;"1;[ ;i;iGo;
;@;{ ;[o;	; "relative_font_sizing;@;"relative-font-sizing;iGo;	; "font_size;@;"font-size;iGo;	; "base_font_size;@;"base-font-size;iG;"if;iG;	[ ;"adjust-leading-to;iG;iE;D["	html;"establish-baseline;i>o;
;@;	[ ;;;["þ/* Resets the line-height to 1 vertical rhythm unit.
 * Does not work on elements whose font-size is different from $base-font-size.
 *
 * @deprecated This mixin will be removed in the next release.
 * Please use the `adjust-leading-to` mixin instead. */;iKo;1;@;T;[ ;	[o;E;@;{ ;[o;;@;@;"1;[ ;i;iQo;
;@;{ ;[o;	; "relative_font_sizing;@;"relative-font-sizing;iQo;	; "base_font_size;@;"base-font-size;iQo;	; "base_font_size;@;"base-font-size;iQ;"if;iQ;	[ ;"adjust-leading-to;iQ;"reset-baseline;iPo;
;@;	[ ;;;["¸/* Show a background image that can be used to debug your alignments.
 * Include the $img argument if you would rather use your own image than the
 * Compass default gradient image. */;iTo;1;@;T;[[o;; "img;@;"imgo;;@;F;iW;	[u;0[o:Sass::Script::Variable	:@underscored_name"img:@options{ :
@name"img:
@lineiXu:Sass::Tree::IfNodeÕ[00[o:Sass::Tree::MixinNode:@options{ :@keywords{ :
@args[o:Sass::Script::Variable	:@underscored_name"base_rhythm_unit;@:
@name"base-rhythm-unit:
@linei[:@children[ ;"baseline-grid-background;i[[o:Sass::Tree::PropNode;@:
@tabsi :@children[ :@valueo:Sass::Script::Funcall
;@:@keywords{ :
@args[o; 	;"img;@;"img;	iY;"image-url;	iY;["background;	iY:@prop_syntax:new;"debug-vertical-alignment;iWo;
;@;	[ ;;;["/* Adjust a block to have a different font size and line height to maintain the
 * rhythm. $lines specifies how many multiples of the baseline rhythm each line
 * of this font should use up. It does not have to be an integer, but it
 * defaults to the smallest integer that is large enough to fit the font.
 * Use $from-size to adjust from a font-size other than the base font-size. */;i_o;1;@;T;[[o;; "to_size;@;"to-size0[o;; "
lines;@;"
lineso;
;@;{ ;[o;	; "to_size;@;"to-size;id;"lines-for-font-size;id[o;; "from_size;@;"from-sizeo;	; "base_font_size;@;"base-font-size;id;	[u;01[o:Sass::Script::Operation
:@options{ :@operator:and:@operand2o; 
;@;:neq;	o:Sass::Script::Variable	:@underscored_name"base_font_size;@:
@name"base-font-size:
@lineie;ie:@operand1o;	;"from_size;@;"from-size;ie;ie;o:!Sass::Script::UnaryOperation	;@;:not;ie:@operando;	;"relative_font_sizing;@;"relative-font-sizing;ie0[o:Sass::Tree::WarnNode	:
@expro:Sass::Script::String	;@:
@type:string:@value"^$relative-font-sizing is false but a relative font size was passed to adjust-font-size-to;if;@:@children[ ;ifo;A;@;@i ;	[ ;o;!
;@;";&;$o;	; "from_size;@;"from-size;ih;ih;%o;!
;@;";#;$o;	; "to_size;@;"to-size;ih;ih;%o;	; "font_unit;@;"font-unit;ih;["font-size;ih;B;Co;E;@;{ ;[o;	; "
lines;@;"
lines;iio;
;@;{ ;[o;	; "relative_font_sizing;@;"relative-font-sizing;iio;	; "to_size;@;"to-size;iio;	; "base_font_size;@;"base-font-size;ii;"if;ii;	[ ;"adjust-leading-to;ii;"adjust-font-size-to;ido;
;@;	[ ;;;["%/* Adjust a block to have different line height to maintain the rhythm.
 * $lines specifies how many multiples of the baseline rhythm each line of this
 * font should use up. It does not have to be an integer, but it defaults to the
 * smallest integer that is large enough to fit the font. */;ilo;1;@;T;[[o;; "
lines;@;"
lines0[o;; "font_size;@;"font-sizeo;	; "base_font_size;@;"base-font-size;ip;	[o;A;@;@i ;	[ ;o;
;@;{ ;[o;	; "
lines;@;"
lines;iqo;	; "font_size;@;"font-size;iq;"rhythm;iq;["line-height;iq;B;C;"adjust-leading-to;ipo;
;@;	[ ;;;[""/* Calculate rhythm units. */;ito;(;@;T;[[o;; "
lines;@;"
lineso;;@;@;"1;[ ;i;iv[o;; "font_size;@;"font-sizeo;	; "base_font_size;@;"base-font-size;iw[o;; "offset;@;"offseto;;@;@;"0;[ ;i ;ix;	[
u;01[o:Sass::Script::Operation
:@options{ :@operator:and:@operand2o; 
;@;:neq;	o:Sass::Script::Variable	:@underscored_name"base_font_size;@:
@name"base-font-size:
@lineiz;iz:@operand1o;	;"font_size;@;"font-size;iz;iz;o:!Sass::Script::UnaryOperation	;@;:not;iz:@operando;	;"relative_font_sizing;@;"relative-font-sizing;iz0[o:Sass::Tree::WarnNode	:
@expro:Sass::Script::String	;@:
@type:string:@value"^$relative-font-sizing is false but a relative font size was passed to the rhythm function;i{;@:@children[ ;i{o;;o;!
;@;";&;$o;	; "font_size;@;"font-size;i};i};%o;!
;@;";#;$o;!
;@;";';$o;	; "offset;@;"offset;i};i};%o;!
;@;";#;$o;	; "base_line_height;@;"base-line-height;i};i};%o;	; "
lines;@;"
lines;i};i};%o;	; "font_unit;@;"font-unit;i};@;	[ ;"rhythm;i};0o;
;@;	[ ;;;["4/* Round the pixels down to nearest integer. */;i~u;0³[o:Sass::Script::Operation
:@options{ :@operator:eq:@operand2o:Sass::Script::String	;@:
@type:identifier:@value"px:
@linei;i:@operand1o:Sass::Script::Funcall
;@:@keywords{ :
@args[o:Sass::Script::Variable	:@underscored_name"rhythm;@:
@name"rhythm;i;"	unit;i0[o:Sass::Tree::VariableNode:
@expro;
;@;{ ;[o;	;"rhythm;@;"rhythm;i{;"
floor;i{;@:@children[ ;"rhythm;i{:@guarded0o;)	;o;	; "rhythm;@;"rhythm;i};@;	[ ;i};"rhythm;iyo;
;@;	[ ;;;["Z/* Calculate the minimum multiple of rhythm units needed to contain the font-size. */;io;(;@;T;[[o;; "font_size;@;"font-size0;	[o;;o;
;@;{ ;[o;	; "round_to_nearest_half_line;@;"round-to-nearest-half-line;io;!
;@;";&;$o;;@;@;"2;[ ;i;i;i;%o;
;@;{ ;[o;!
;@;";&;$o;	; "base_line_height;@;"base-line-height;i;i;%o;!
;@;";#;$o;	; "font_size;@;"font-size;i;i;%o;;@;@;"2;[ ;i;i;"	ceil;io;
;@;{ ;[o;!
;@;";&;$o;	; "base_line_height;@;"base-line-height;i;i;%o;	; "font_size;@;"font-size;i;"	ceil;i;"if;i;@;	[ ;"
lines;i;0u;02[o:Sass::Script::Operation
:@options{ :@operator:lt:@operand2o; 
;@;:
times;	o:Sass::Script::Number:@denominator_units[ ;@:@original"2:@numerator_units[ :@valuei:
@linei;i:@operand1o:Sass::Script::Variable	:@underscored_name"min_line_padding;@:
@name"min-line-padding;i;i;o; 
;@;:
minus;	o;	;"font_size;@;"font-size;i;i;o; 
;@;;
;	o;	;"base_line_height;@;"base-line-height;i;i;o;	;"
lines;@;"
lines;i0[o:Sass::Tree::VariableNode:
@expro; 
;@;:	plus;	o:Sass::Script::Funcall
;@:@keywords{ :
@args[o;	;"round_to_nearest_half_line;@;"round-to-nearest-half-line;io;;@
;@;"0.5;[ ;f0.5;io;;@
;@;"1;[ ;i;i;"if;i;i;o;	;"
lines;@;"
lines;i;@:@children[ ;"
lines;i:@guarded0o;)	;o;	; "
lines;@;"
lines;i;@;	[ ;i;"lines-for-font-size;io;
;@;	[ ;;;["L/* Apply leading whitespace. The $property can be margin or padding. */;io;1;@;T;[[o;; "
lines;@;"
lineso;;@;@;"1;[ ;i;i[o;; "font_size;@;"font-sizeo;	; "base_font_size;@;"base-font-size;i[o;; "property;@;"propertyo;	;@;;;"margin;i;	[o;A;@;@i ;	[ ;o;
;@;{ ;[o;	; "
lines;@;"
lines;io;	; "font_size;@;"font-size;i;"rhythm;i;[o;	; "property;@;"property;i"	-top;i;B;C;"leader;io;
;@;	[ ;;;["//* Apply leading whitespace as padding. */;io;1;@;T;[[o;; "
lines;@;"
lineso;;@;@;"1;[ ;i;i[o;; "font_size;@;"font-sizeo;	; "base_font_size;@;"base-font-size;i;	[o;A;@;@i ;	[ ;o;
;@;{ ;[o;	; "
lines;@;"
lines;io;	; "font_size;@;"font-size;i;"rhythm;i;["padding-top;i;B;C;"padding-leader;io;
;@;	[ ;;;["./* Apply leading whitespace as margin. */;io;1;@;T;[[o;; "
lines;@;"
lineso;;@;@;"1;[ ;i;i[o;; "font_size;@;"font-sizeo;	; "base_font_size;@;"base-font-size;i;	[o;A;@;@i ;	[ ;o;
;@;{ ;[o;	; "
lines;@;"
lines;io;	; "font_size;@;"font-size;i;"rhythm;i;["margin-top;i;B;C;"margin-leader;io;
;@;	[ ;;;["M/* Apply trailing whitespace. The $property can be margin or padding. */;io;1;@;T;[[o;; "
lines;@;"
lineso;;@;@;"1;[ ;i;i[o;; "font_size;@;"font-sizeo;	; "base_font_size;@;"base-font-size;i[o;; "property;@;"propertyo;	;@;;;"margin;i;	[o;A;@;@i ;	[ ;o;
;@;{ ;[o;	; "
lines;@;"
lines;io;	; "font_size;@;"font-size;i;"rhythm;i;[o;	; "property;@;"property;i"-bottom;i;B;C;"trailer;io;
;@;	[ ;;;["0/* Apply trailing whitespace as padding. */;io;1;@;T;[[o;; "
lines;@;"
lineso;;@;@;"1;[ ;i;i [o;; "font_size;@;"font-sizeo;	; "base_font_size;@;"base-font-size;i ;	[o;A;@;@i ;	[ ;o;
;@;{ ;[o;	; "
lines;@;"
lines;i¡o;	; "font_size;@;"font-size;i¡;"rhythm;i¡;["padding-bottom;i¡;B;C;"padding-trailer;i o;
;@;	[ ;;;["//* Apply trailing whitespace as margin. */;i¤o;1;@;T;[[o;; "
lines;@;"
lineso;;@;@;"1;[ ;i;i¥[o;; "font_size;@;"font-sizeo;	; "base_font_size;@;"base-font-size;i¥;	[o;A;@;@i ;	[ ;o;
;@;{ ;[o;	; "
lines;@;"
lines;i¦o;	; "font_size;@;"font-size;i¦;"rhythm;i¦;["margin-bottom;i¦;B;C;"margin-trailer;i¥o;
;@;	[ ;;;["V/* Shorthand mixin to apply whitespace for top and bottom margins and padding. */;i©o;1;@;T;[
[o;; "leader;@;"leadero;;@;@;"0;[ ;i ;iª[o;; "padding_leader;@;"padding-leadero;;@;@;"0;[ ;i ;iª[o;; "padding_trailer;@;"padding-trailero;;@;@;"0;[ ;i ;iª[o;; "trailer;@;"trailero;;@;@;"0;[ ;i ;iª[o;; "font_size;@;"font-sizeo;	; "base_font_size;@;"base-font-size;iª;	[	o;E;@;{ ;[o;	; "leader;@;"leader;i«o;	; "font_size;@;"font-size;i«;	[ ;"leader;i«o;E;@;{ ;[o;	; "padding_leader;@;"padding-leader;i¬o;	; "font_size;@;"font-size;i¬;	[ ;"padding-leader;i¬o;E;@;{ ;[o;	; "padding_trailer;@;"padding-trailer;i­o;	; "font_size;@;"font-size;i­;	[ ;"padding-trailer;i­o;E;@;{ ;[o;	; "trailer;@;"trailer;i®o;	; "font_size;@;"font-size;i®;	[ ;"trailer;i®;"rhythm;iªo;
;@;	[ ;;;["/* Apply a border and whitespace to any side without destroying the vertical
 * rhythm. The whitespace must be greater than the width of the border. */;i±o;1;@;T;[
[o;; "	side;@;"	side0[o;; "
width;@;"
widtho;;[ ;@;"1px;["px;i;i³[o;; "
lines;@;"
lineso;;@;@;"1;[ ;i;i³[o;; "font_size;@;"font-sizeo;	; "base_font_size;@;"base-font-size;i³[o;; "border_style;@;"border-styleo;	; " default_rhythm_border_style;@;" default-rhythm-border-style;i³;	[u;0>[o:Sass::Script::Operation
:@options{ :@operator:and:@operand2o; 
;@;:neq;	o:Sass::Script::Variable	:@underscored_name"base_font_size;@:
@name"base-font-size:
@linei´;i´:@operand1o;	;"font_size;@;"font-size;i´;i´;o:!Sass::Script::UnaryOperation	;@;:not;i´:@operando;	;"relative_font_sizing;@;"relative-font-sizing;i´0[o:Sass::Tree::WarnNode	:
@expro:Sass::Script::String	;@:
@type:string:@value"c$relative-font-sizing is false but a relative font size was passed to apply-side-rhythm-border;iµ;@:@children[ ;iµo;A;@;T;@i ;	[o;A;@;@i ;	[ ;o;	; "border_style;@;"border-style;i¸;["
style;i¸;B;Co;A;@;@i ;	[ ;o;!
;@;";&;$o;	; "font_size;@;"font-size;i¹;i¹;%o;!
;@;";#;$o;	; "
width;@;"
width;i¹;i¹;%o;	; "font_unit;@;"font-unit;i¹;["
width;i¹;B;C;o;;@;;;" ;["border-o;	; "	side;@;"	side;i·;i·;B;Co;A;@;@i ;	[ ;o;
;@;{"offseto;	; "
width;@;"
width;i»;[o;	; "
lines;@;"
lines;i»o;	; "font_size;@;"font-size;i»;"rhythm;i»;["padding-o;	; "	side;@;"	side;i»;i»;B;C;"apply-side-rhythm-border;i³o;
;@;	[ ;;;["=/* Apply borders and whitespace equally to all sides. */;i¾o;1;@;T;[	[o;; "
width;@;"
widtho;;[ ;@;"1px;["px;i;i¿[o;; "
lines;@;"
lineso;;@;@;"1;[ ;i;i¿[o;; "font_size;@;"font-sizeo;	; "base_font_size;@;"base-font-size;i¿[o;; "border_style;@;"border-styleo;	; " default_rhythm_border_style;@;" default-rhythm-border-style;i¿;	[u;04[o:Sass::Script::Operation
:@options{ :@operator:and:@operand2o; 
;@;:neq;	o:Sass::Script::Variable	:@underscored_name"base_font_size;@:
@name"base-font-size:
@lineiÀ;iÀ:@operand1o;	;"font_size;@;"font-size;iÀ;iÀ;o:!Sass::Script::UnaryOperation	;@;:not;iÀ:@operando;	;"relative_font_sizing;@;"relative-font-sizing;iÀ0[o:Sass::Tree::WarnNode	:
@expro:Sass::Script::String	;@:
@type:string:@value"Y$relative-font-sizing is false but a relative font size was passed to rhythm-borders;iÁ;@:@children[ ;iÁo;A;@;T;@i ;	[o;A;@;@i ;	[ ;o;	; "border_style;@;"border-style;iÄ;["
style;iÄ;B;Co;A;@;@i ;	[ ;o;!
;@;";&;$o;	; "font_size;@;"font-size;iÅ;iÅ;%o;!
;@;";#;$o;	; "
width;@;"
width;iÅ;iÅ;%o;	; "font_unit;@;"font-unit;iÅ;["
width;iÅ;B;C;o;;@;;;" ;["border;iÃ;B;Co;A;@;@i ;	[ ;o;
;@;{"offseto;	; "
width;@;"
width;iÇ;[o;	; "
lines;@;"
lines;iÇo;	; "font_size;@;"font-size;iÇ;"rhythm;iÇ;["padding;iÇ;B;C;"rhythm-borders;i¿o;
;@;	[ ;;;[""/* Apply a leading border. */;iÊo;1;@;T;[	[o;; "
width;@;"
widtho;;[ ;@;"1px;["px;i;iË[o;; "
lines;@;"
lineso;;@;@;"1;[ ;i;iË[o;; "font_size;@;"font-sizeo;	; "base_font_size;@;"base-font-size;iË[o;; "border_style;@;"border-styleo;	; " default_rhythm_border_style;@;" default-rhythm-border-style;iË;	[o;E;@;{ ;[
o;	;@;;;"top;iÌo;	; "
width;@;"
width;iÌo;	; "
lines;@;"
lines;iÌo;	; "font_size;@;"font-size;iÌo;	; "border_style;@;"border-style;iÌ;	[ ;"apply-side-rhythm-border;iÌ;"leading-border;iËo;
;@;	[ ;;;["#/* Apply a trailing border. */;iÏo;1;@;T;[	[o;; "
width;@;"
widtho;;[ ;@;"1px;["px;i;iÐ[o;; "
lines;@;"
lineso;;@;@;"1;[ ;i;iÐ[o;; "font_size;@;"font-sizeo;	; "base_font_size;@;"base-font-size;iÐ[o;; "border_style;@;"border-styleo;	; " default_rhythm_border_style;@;" default-rhythm-border-style;iÐ;	[o;E;@;{ ;[
o;	;@;;;"bottom;iÑo;	; "
width;@;"
width;iÑo;	; "
lines;@;"
lines;iÑo;	; "font_size;@;"font-size;iÑo;	; "border_style;@;"border-style;iÑ;	[ ;"apply-side-rhythm-border;iÑ;"trailing-border;iÐo;
;@;	[ ;;;["3/* Apply both leading and trailing borders. */;iÔo;1;@;T;[	[o;; "
width;@;"
widtho;;[ ;@;"1px;["px;i;iÕ[o;; "
lines;@;"
lineso;;@;@;"1;[ ;i;iÕ[o;; "font_size;@;"font-sizeo;	; "base_font_size;@;"base-font-size;iÕ[o;; "border_style;@;"border-styleo;	; " default_rhythm_border_style;@;" default-rhythm-border-style;iÕ;	[o;E;@;{ ;[	o;	; "
width;@;"
width;iÖo;	; "
lines;@;"
lines;iÖo;	; "font_size;@;"font-size;iÖo;	; "border_style;@;"border-style;iÖ;	[ ;"leading-border;iÖo;E;@;{ ;[	o;	; "
width;@;"
width;i×o;	; "
lines;@;"
lines;i×o;	; "font_size;@;"font-size;i×o;	; "border_style;@;"border-style;i×;	[ ;"trailing-border;i×;"horizontal-borders;iÕo;
;@;	[ ;;;["0/* Alias for `horizontal-borders` mixin. */;iÚo;1;@;T;[	[o;; "
width;@;"
widtho;;[ ;@;"1px;["px;i;iÛ[o;; "
lines;@;"
lineso;;@;@;"1;[ ;i;iÛ[o;; "font_size;@;"font-sizeo;	; "base_font_size;@;"base-font-size;iÛ[o;; "border_style;@;"border-styleo;	; " default_rhythm_border_style;@;" default-rhythm-border-style;iÛ;	[o;E;@;{ ;[	o;	; "
width;@;"
width;iÜo;	; "
lines;@;"
lines;iÜo;	; "font_size;@;"font-size;iÜo;	; "border_style;@;"border-style;iÜ;	[ ;"horizontal-borders;iÜ;"h-borders;iÛ;i
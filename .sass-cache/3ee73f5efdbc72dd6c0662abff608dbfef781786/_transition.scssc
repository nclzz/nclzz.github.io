3.2.0.alpha.275 (Bleeding Edge)
77c479240b27e28f77813fb2a5017cc40bf3e30c
o:Sass::Tree::RootNode
:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@options{ :@has_childrenT:@children[o:Sass::Tree::ImportNode
;0;@:@imported_filename"shared;	[ :
@lineio:Sass::Tree::CommentNode
;@;	[ :
@type:silent:@value["ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */;io:Sass::Tree::VariableNode:
@expro:Sass::Script::String	;@;:identifier;"all;i;@;	[ :
@name" default-transition-property;i:@guarded"!defaulto;;o:Sass::Script::Number:@denominator_units[ ;@:@original"1s:@numerator_units["s;i;i;@;	[ ;" default-transition-duration;i;"!defaulto;;o:Sass::Script::Bool;@;F;i;@;	[ ;" default-transition-function;i;"!defaulto;;o;;@;F;i;@;	[ ;"default-transition-delay;i;"!defaulto;;o:Sass::Script::List	:@separator:
comma;@;[o;	;@;;;"transform;io;	;@;;;"transform-origin;i;i;@;	[ ;"#transitionable-prefixed-values;i;"!defaulto;
;@;	[ ;;;["}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */;i!o:Sass::Tree::MixinDefNode;@;T:
@args[[o:Sass::Script::Variable:@underscored_name"property_1;@;"property-1o;!	;"" default_transition_property;@;" default-transition-property;i&[o;!;""property_2;@;"property-2o;;@;F;i'[o;!;""property_3;@;"property-3o;;@;F;i([o;!;""property_4;@;"property-4o;;@;F;i)[o;!;""property_5;@;"property-5o;;@;F;i*[o;!;""property_6;@;"property-6o;;@;F;i+[o;!;""property_7;@;"property-7o;;@;F;i,[o;!;""property_8;@;"property-8o;;@;F;i-[o;!;""property_9;@;"property-9o;;@;F;i.[o;!;""property_10;@;"property-10o;;@;F;i/;	[u:Sass::Tree::IfNodeÍ[o:Sass::Script::Operation
:@options{ :@operator:eq:@operand2o:Sass::Script::String	;@:
@type:identifier:@value"string:
@linei1;i1:@operand1o:Sass::Script::Funcall
;@:@keywords{ :
@args[o:Sass::Script::Variable	:@underscored_name"property_1;@:
@name"property-1;i1;"type-of;i10[o:Sass::Tree::VariableNode:
@expro;
;@;{ ;[o;	;"property_1;@;"property-1;i1;"unquote;i1;@:@children[ ;"property-1;i1:@guarded0o;;o:Sass::Script::Funcall
;@:@keywords{ ; [o;!	;""property_1;@;"property-1;i2o;!	;""property_2;@;"property-2;i2o;!	;""property_3;@;"property-3;i2o;!	;""property_4;@;"property-4;i2o;!	;""property_5;@;"property-5;i2o;!	;""property_6;@;"property-6;i2o;!	;""property_7;@;"property-7;i2o;!	;""property_8;@;"property-8;i2o;!	;""property_9;@;"property-9;i2o;!	;""property_10;@;"property-10;i2;"compact;i2;@;	[ ;"properties;i2;0u;#¼[o:Sass::Script::Variable	:@underscored_name"$experimental_support_for_webkit:@options{ :
@name"$experimental-support-for-webkit:
@linei30[o:Sass::Tree::PropNode;@:
@tabsi :@children[ :@valueo:Sass::Script::Funcall
;@:@keywords{ :
@args[o:Sass::Script::String	;@:
@type:identifier;"-webkit;	i3o; 	;"properties;@;"properties;	i3;"prefixed-for-transition;	i3;[" -webkit-transition-property;	i3:@prop_syntax:newu;#¸[o:Sass::Script::Variable	:@underscored_name"%experimental_support_for_mozilla:@options{ :
@name"%experimental-support-for-mozilla:
@linei40[o:Sass::Tree::PropNode;@:
@tabsi :@children[ :@valueo:Sass::Script::Funcall
;@:@keywords{ :
@args[o:Sass::Script::String	;@:
@type:identifier;"	-moz;	i4o; 	;"properties;@;"properties;	i4;"prefixed-for-transition;	i4;["-moz-transition-property;	i4:@prop_syntax:newu;#°[o:Sass::Script::Variable	:@underscored_name"#experimental_support_for_opera:@options{ :
@name"#experimental-support-for-opera:
@linei50[o:Sass::Tree::PropNode;@:
@tabsi :@children[ :@valueo:Sass::Script::Funcall
;@:@keywords{ :
@args[o:Sass::Script::String	;@:
@type:identifier;"-o;	i5o; 	;"properties;@;"properties;	i5;"prefixed-for-transition;	i5;["-o-transition-property;	i5:@prop_syntax:newo:Sass::Tree::PropNode;@:
@tabsi ;	[ ;o;!	;""properties;@;"properties;i6;["transition-property;i6:@prop_syntax:new;"transition-property;i0o;
;@;	[ ;;;["¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */;i9o;;@;T; [[o;!;""duration_1;@;"duration-1o;!	;"" default_transition_duration;@;" default-transition-duration;i>[o;!;""duration_2;@;"duration-2o;;@;F;i?[o;!;""duration_3;@;"duration-3o;;@;F;i@[o;!;""duration_4;@;"duration-4o;;@;F;iA[o;!;""duration_5;@;"duration-5o;;@;F;iB[o;!;""duration_6;@;"duration-6o;;@;F;iC[o;!;""duration_7;@;"duration-7o;;@;F;iD[o;!;""duration_8;@;"duration-8o;;@;F;iE[o;!;""duration_9;@;"duration-9o;;@;F;iF[o;!;""duration_10;@;"duration-10o;;@;F;iG;	[u;#Í[o:Sass::Script::Operation
:@options{ :@operator:eq:@operand2o:Sass::Script::String	;@:
@type:identifier:@value"string:
@lineiI;iI:@operand1o:Sass::Script::Funcall
;@:@keywords{ :
@args[o:Sass::Script::Variable	:@underscored_name"duration_1;@:
@name"duration-1;iI;"type-of;iI0[o:Sass::Tree::VariableNode:
@expro;
;@;{ ;[o;	;"duration_1;@;"duration-1;iI;"unquote;iI;@:@children[ ;"duration-1;iI:@guarded0o;;o;$
;@;%{ ; [o;!	;""duration_1;@;"duration-1;iJo;!	;""duration_2;@;"duration-2;iJo;!	;""duration_3;@;"duration-3;iJo;!	;""duration_4;@;"duration-4;iJo;!	;""duration_5;@;"duration-5;iJo;!	;""duration_6;@;"duration-6;iJo;!	;""duration_7;@;"duration-7;iJo;!	;""duration_8;@;"duration-8;iJo;!	;""duration_9;@;"duration-9;iJo;!	;""duration_10;@;"duration-10;iJ;"compact;iJ;@;	[ ;"durations;iJ;0o:Sass::Tree::MixinNode;@;%{ ; [o;	;@;;;"transition-duration;iKo;!	;""durations;@;"durations;iKo;	;@;;;"	-moz;iLo;	;@;;;"-webkit;iLo;	;@;;;"-o;iLo:!Sass::Script::UnaryOperation	;@:@operator:not;iL:@operando;	;@;;;"-ms;iLo;+	;@;,;-;iL;.o;	;@;;;"-khtml;iLo;	;@;;;"official;iL;	[ ;"experimental;iM;"transition-duration;iHo;
;@;	[ ;;;["õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */;iPo;;@;T; [[o;!;""function_1;@;"function-1o;!	;"" default_transition_function;@;" default-transition-function;iV[o;!;""function_2;@;"function-2o;;@;F;iW[o;!;""function_3;@;"function-3o;;@;F;iX[o;!;""function_4;@;"function-4o;;@;F;iY[o;!;""function_5;@;"function-5o;;@;F;iZ[o;!;""function_6;@;"function-6o;;@;F;i[[o;!;""function_7;@;"function-7o;;@;F;i\[o;!;""function_8;@;"function-8o;;@;F;i][o;!;""function_9;@;"function-9o;;@;F;i^[o;!;""function_10;@;"function-10o;;@;F;i_;	[o;;o;$
;@;%{ ; [o;!	;""function_1;@;"function-1;ia;"unquote;ia;@;	[ ;"function-1;ia;0o;;o;$
;@;%{ ; [o;!	;""function_1;@;"function-1;ibo;!	;""function_2;@;"function-2;ibo;!	;""function_3;@;"function-3;ibo;!	;""function_4;@;"function-4;ibo;!	;""function_5;@;"function-5;ibo;!	;""function_6;@;"function-6;ibo;!	;""function_7;@;"function-7;ibo;!	;""function_8;@;"function-8;ibo;!	;""function_9;@;"function-9;ibo;!	;""function_10;@;"function-10;ib;"compact;ib;@;	[ ;"functions;ib;0o;*;@;%{ ; [o;	;@;;;"transition-timing-function;ico;!	;""functions;@;"functions;ico;	;@;;;"	-moz;ido;	;@;;;"-webkit;ido;	;@;;;"-o;ido;+	;@;,;-;id;.o;	;@;;;"-ms;ido;+	;@;,;-;id;.o;	;@;;;"-khtml;ido;	;@;;;"official;id;	[ ;"experimental;ie;"transition-timing-function;i`o;
;@;	[ ;;;["¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */;iho;;@;T; [[o;!;""delay_1;@;"delay-1o;!	;""default_transition_delay;@;"default-transition-delay;im[o;!;""delay_2;@;"delay-2o;;@;F;in[o;!;""delay_3;@;"delay-3o;;@;F;io[o;!;""delay_4;@;"delay-4o;;@;F;ip[o;!;""delay_5;@;"delay-5o;;@;F;iq[o;!;""delay_6;@;"delay-6o;;@;F;ir[o;!;""delay_7;@;"delay-7o;;@;F;is[o;!;""delay_8;@;"delay-8o;;@;F;it[o;!;""delay_9;@;"delay-9o;;@;F;iu[o;!;""delay_10;@;"delay-10o;;@;F;iv;	[u;#¾[o:Sass::Script::Operation
:@options{ :@operator:eq:@operand2o:Sass::Script::String	;@:
@type:identifier:@value"string:
@lineix;ix:@operand1o:Sass::Script::Funcall
;@:@keywords{ :
@args[o:Sass::Script::Variable	:@underscored_name"delay_1;@:
@name"delay-1;ix;"type-of;ix0[o:Sass::Tree::VariableNode:
@expro;
;@;{ ;[o;	;"delay_1;@;"delay-1;ix;"unquote;ix;@:@children[ ;"delay-1;ix:@guarded0o;;o;$
;@;%{ ; [o;!	;""delay_1;@;"delay-1;iyo;!	;""delay_2;@;"delay-2;iyo;!	;""delay_3;@;"delay-3;iyo;!	;""delay_4;@;"delay-4;iyo;!	;""delay_5;@;"delay-5;iyo;!	;""delay_6;@;"delay-6;iyo;!	;""delay_7;@;"delay-7;iyo;!	;""delay_8;@;"delay-8;iyo;!	;""delay_9;@;"delay-9;iyo;!	;""delay_10;@;"delay-10;iy;"compact;iy;@;	[ ;"delays;iy;0o;*;@;%{ ; [o;	;@;;;"transition-delay;izo;!	;""delays;@;"delays;izo;	;@;;;"	-moz;i{o;	;@;;;"-webkit;i{o;	;@;;;"-o;i{o;+	;@;,;-;i{;.o;	;@;;;"-ms;i{o;+	;@;,;-;i{;.o;	;@;;;"-khtml;i{o;	;@;;;"official;i{;	[ ;"experimental;i|;"transition-delay;iwo;
;@;	[ ;;;["*/* Transition all-in-one shorthand */;io;;@;T; [	[o;!;""property;@;"propertyo;!	;"" default_transition_property;@;" default-transition-property;i}[o;!;""duration;@;"durationo;!	;"" default_transition_duration;@;" default-transition-duration;i~[o;!;""function;@;"functiono;!	;"" default_transition_function;@;" default-transition-function;i[o;!;""
delay;@;"
delayo;!	;""default_transition_delay;@;"default-transition-delay;i;	[o;*;@;%{ ; [o;$
;@;%{ ; [o;	;:
space;@;[	o;!	;""property;@;"property;io;!	;""duration;@;"duration;io;!	;""function;@;"function;io;!	;""
delay;@;"
delay;i;i;"compact;i;	[ ;"transition;i;"single-transition;io;;@;T; [[o;!;""transition_1;@;"transition-1o;	;@;;;"default;i[o;!;""transition_2;@;"transition-2o;;@;F;i[o;!;""transition_3;@;"transition-3o;;@;F;i[o;!;""transition_4;@;"transition-4o;;@;F;i[o;!;""transition_5;@;"transition-5o;;@;F;i[o;!;""transition_6;@;"transition-6o;;@;F;i[o;!;""transition_7;@;"transition-7o;;@;F;i[o;!;""transition_8;@;"transition-8o;;@;F;i[o;!;""transition_9;@;"transition-9o;;@;F;i[o;!;""transition_10;@;"transition-10o;;@;F;i;	[u;#î[o:Sass::Script::Operation
:@options{ :@operator:eq:@operand2o:Sass::Script::String	;@:
@type:identifier:@value"default:
@linei;i:@operand1o:Sass::Script::Variable	:@underscored_name"transition_1;@:
@name"transition-1;i0[o:Sass::Tree::VariableNode:
@expro:Sass::Script::Funcall
;@:@keywords{ :
@args[o:Sass::Script::List	:@separator:
space;@;[	o;	;" default_transition_property;@;" default-transition-property;io;	;" default_transition_duration;@;" default-transition-duration;io;	;" default_transition_function;@;" default-transition-function;io;	;"default_transition_delay;@;"default-transition-delay;i;i;"compact;i;@:@children[ ;"transition-1;i:@guarded0o;;o;;@;F;i;@;	[ ;"transitions;i;0u;#g[o:Sass::Script::Operation
:@options{ :@operator:and:@operand2o; 
;@;:eq;	o:Sass::Script::String	;@:
@type:identifier:@value"	list:
@linei;i:@operand1o:Sass::Script::Funcall
;@:@keywords{ :
@args[o;
;@;{ ;[o:Sass::Script::Variable	:@underscored_name"transition_1;@:
@name"transition-1;io:Sass::Script::Number:@denominator_units[ ;@:@original"1:@numerator_units[ ;i;i;"nth;i;"type-of;i;i;o; 
;@;;
;	o;	;@;;;"	list;i;i;o;
;@;{ ;[o;	;"transition_1;@;"transition-1;i;"type-of;iu:Sass::Tree::IfNode[00[o:Sass::Tree::VariableNode:
@expro:Sass::Script::Funcall
:@options{ :@keywords{ :
@args[o:Sass::Script::Variable	:@underscored_name"transition_1;@	:
@name"transition-1:
@lineio;	;"transition_2;@	;"transition-2;io;	;"transition_3;@	;"transition-3;io;	;"transition_4;@	;"transition-4;io;	;"transition_5;@	;"transition-5;io;	;"transition_6;@	;"transition-6;io;	;"transition_7;@	;"transition-7;io;	;"transition_8;@	;"transition-8;io;	;"transition_9;@	;"transition-9;io;	;"transition_10;@	;"transition-10;i;"compact;i;@	:@children[ ;"transitions;i:@guarded0[o:Sass::Tree::VariableNode:
@expro;
;@;{ ;[o;	;"transition_1;@;"transition-1;io;
;@;{ ;[o;	;"transition_2;@;"transition-2;io;	;"transition_3;@;"transition-3;io;	;"transition_4;@;"transition-4;io;	;"transition_5;@;"transition-5;io;	;"transition_6;@;"transition-6;io;	;"transition_7;@;"transition-7;io;	;"transition_8;@;"transition-8;io;	;"transition_9;@;"transition-9;io;	;"transition_10;@;"transition-10;i;"compact;io;	;@;;;"
comma;i;"	join;i;@:@children[ ;"transitions;i:@guarded0o;;o;$
;@;%{ ; [ ;"comma-list;i;@;	[ ;"delays;i;0o;;o;;@;F;i;@;	[ ;"has-delays;i;0o;;o;$
;@;%{ ; [ ;"comma-list;i;@;	[ ;"webkit-value;i;0o;;o;$
;@;%{ ; [ ;"comma-list;i;@;	[ ;"moz-value;i;0o;;o;$
;@;%{ ; [ ;"comma-list;i;@;	[ ;"o-value;i;0o;
;@;	[ ;;;["/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */;i o:Sass::Tree::EachNode;@;T;	[o;
;@;	[ ;;;["}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */;i£o;;o;$
;@;%{ ; [o;!	;""transition;@;"transition;i¥o;;[ ;@;"1;[ ;i;i¥;"nth;i¥;@;	[ ;"property;i¥;0o;;o;;@;F;i¦;@;	[ ;"duration;i¦;0o;;o;;@;F;i§;@;	[ ;"timing-function;i§;0o;;o;;@;F;i¨;@;	[ ;"
delay;i¨;0u;#
[o:Sass::Script::Operation
:@options{ :@operator:gt:@operand2o:Sass::Script::Number:@denominator_units[ ;@:@original"1:@numerator_units[ :@valuei:
@linei©;i©:@operand1o:Sass::Script::Funcall
;@:@keywords{ :
@args[o:Sass::Script::Variable	:@underscored_name"transition;@:
@name"transition;i©;"length;i©0[o:Sass::Tree::VariableNode:
@expro;
;@;{ ;[o;	;"transition;@;"transition;i©o;
;@	;@;"2;[ ;i;i©;"nth;i©;@:@children[ ;"duration;i©:@guarded0u;#[o:Sass::Script::Operation
:@options{ :@operator:gt:@operand2o:Sass::Script::Number:@denominator_units[ ;@:@original"2:@numerator_units[ :@valuei:
@lineiª;iª:@operand1o:Sass::Script::Funcall
;@:@keywords{ :
@args[o:Sass::Script::Variable	:@underscored_name"transition;@:
@name"transition;iª;"length;iª0[o:Sass::Tree::VariableNode:
@expro;
;@;{ ;[o;	;"transition;@;"transition;iªo;
;@	;@;"3;[ ;i;iª;"nth;iª;@:@children[ ;"timing-function;iª:@guarded0u;#M[o:Sass::Script::Operation
:@options{ :@operator:gt:@operand2o:Sass::Script::Number:@denominator_units[ ;@:@original"3:@numerator_units[ :@valuei:
@linei«;i«:@operand1o:Sass::Script::Funcall
;@:@keywords{ :
@args[o:Sass::Script::Variable	:@underscored_name"transition;@:
@name"transition;i«;"length;i«0[o:Sass::Tree::VariableNode:
@expro;
;@;{ ;[o;	;"transition;@;"transition;i«o;
;@	;@;"4;[ ;i	;i«;"nth;i«;@:@children[ ;"
delay;i«:@guarded0o;;o:Sass::Script::Bool;@;T;i«;@;[ ;"has-delays;i«;0o;
;@;	[ ;;;[";/* If a delay is provided without a timing function */;i­u;#^[o:Sass::Script::Operation
:@options{ :@operator:and:@operand2o:!Sass::Script::UnaryOperation	;@;:not:
@linei®:@operando:Sass::Script::Variable	:@underscored_name"
delay;@:
@name"
delay;i®;i®:@operand1o:Sass::Script::Funcall
;@:@keywords{ :
@args[o;	;"timing_function;@;"timing-function;i®;"is-time;i®0[o:Sass::Tree::VariableNode:
@expro;	;"timing_function;@;"timing-function;i®;@:@children[ ;"
delay;i®:@guarded0o;;o:Sass::Script::Bool;@:@valueF;i®;@;[ ;"timing-function;i®;0o;;o;;@;T;i®;@;[ ;"has-delays;i®;0o;
;@;	[ ;;;["9/* Keep a list of delays in case one is specified */;i°o;;o;$
;@;%{ ; [o;!	;""delays;@;"delays;i±o;$
;@;%{ ; [o;!	;""
delay;@;"
delay;i±o;!	;""
delay;@;"
delay;i±o;;[ ;@;"0s;["s;i ;i±;"if;i±;"append;i±;@;	[ ;"delays;i±;0o;;o;$
;@;%{ ; [o;!	;""webkit_value;@;"webkit-value;i³o;$
;@;%{ ; [o;	;;/;@;[o;$
;@;%{ ; [o;	;@;;;"-webkit;i³o;!	;""property;@;"property;i³;"prefixed-for-transition;i³o;!	;""duration;@;"duration;i³o;!	;""timing_function;@;"timing-function;i³;i³;"compact;i³;"append;i³;@;	[ ;"webkit-value;i³;0o;;o;$
;@;%{ ; [o;!	;""moz_value;@;"moz-value;i´o;$
;@;%{ ; [o;	;;/;@;[	o;$
;@;%{ ; [o;	;@;;;"	-moz;i´o;!	;""property;@;"property;i´;"prefixed-for-transition;i´o;!	;""duration;@;"duration;i´o;!	;""timing_function;@;"timing-function;i´o;!	;""
delay;@;"
delay;i´;i´;"compact;i´;"append;i´;@;	[ ;"moz-value;i´;0o;;o;$
;@;%{ ; [o;!	;""o_value;@;"o-value;iµo;$
;@;%{ ; [o;	;;/;@;[	o;$
;@;%{ ; [o;	;@;;;"-o;iµo;!	;""property;@;"property;iµ;"prefixed-for-transition;iµo;!	;""duration;@;"duration;iµo;!	;""timing_function;@;"timing-function;iµo;!	;""
delay;@;"
delay;iµ;iµ;"compact;iµ;"append;iµ;@;	[ ;"o-value;iµ;0;i¢:	@var"transition:
@listo;!	;""transitions;@;"transitions;i¢u;#Ý[o:Sass::Script::Variable	:@underscored_name"$experimental_support_for_webkit:@options{ :
@name"$experimental-support-for-webkit:
@linei¸0[o:Sass::Tree::PropNode;@:
@tabsi :@children[ :@valueo; 	;"webkit_value;@;"webkit-value;	i¸;["-webkit-transition;	i¸:@prop_syntax:newo:Sass::Tree::CommentNode
;@;[ :
@type:silent;["j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */;	i¹u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:@underscored_name"has_delays:@options{ :
@name"has-delays:
@lineiº0[o:Sass::Tree::PropNode;@:
@tabsi :@children[ :@valueo; 	;"delays;@;"delays;	iº;["-webkit-transition-delay;	iº:@prop_syntax:newu;##[o:Sass::Script::Variable	:@underscored_name"%experimental_support_for_mozilla:@options{ :
@name"%experimental-support-for-mozilla:
@linei»0[o:Sass::Tree::PropNode;@:
@tabsi :@children[ :@valueo; 	;"moz_value;@;"moz-value;	i»;["-moz-transition;	i»:@prop_syntax:newu;#[o:Sass::Script::Variable	:@underscored_name"#experimental_support_for_opera:@options{ :
@name"#experimental-support-for-opera:
@linei¼0[o:Sass::Tree::PropNode;@:
@tabsi :@children[ :@valueo; 	;"o_value;@;"o-value;	i¼;["-o-transition;	i¼:@prop_syntax:newo;&;@;'i ;	[ ;o;!	;""transitions;@;"transitions;i½;["transition;i½;(;);"transition;io;
;@;	[ ;;;["Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */;iÀo:Sass::Tree::FunctionNode;@;T; [[o;!;""	list;@;"	listo;	;;/;@;[ ;iÁ;	[o:Sass::Tree::ReturnNode	;o;$
;@;%{ ; [o;	;;/;@;[ ;iÂo;!	;""	list;@;"	list;iÂo;	;@;;;"
comma;iÂ;"	join;iÂ;@;	[ ;iÂ;"comma-list;iÁo;
;@;	[ ;;;["i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */;iÅo;3;@;T; [[o;!;""prefix;@;"prefix0[o;!;""property;@;"property0;	[u;#[o:Sass::Script::Operation
:@options{ :@operator:eq:@operand2o:Sass::Script::String	;@:
@type:identifier:@value"	list:
@lineiÇ;iÇ:@operand1o:Sass::Script::Funcall
;@:@keywords{ :
@args[o:Sass::Script::Variable	:@underscored_name"property;@:
@name"property;iÇ;"type-of;iÇu:Sass::Tree::IfNodeP[00[u:Sass::Tree::IfNode0[o:Sass::Script::Funcall
:@options{ :@keywords{ :
@args[o:Sass::Script::Variable	:@underscored_name"#transitionable_prefixed_values;@:
@name"#transitionable-prefixed-values:
@lineiÎo;		;
"property;@;"property;iÎ;"
index;iÎu:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:
@expro:Sass::Script::Variable	:@underscored_name"property:@options{ :
@name"property:
@lineiÑ;	@
:@children[ ;iÑ[o:Sass::Tree::ReturnNode	:
@expro: Sass::Script::Interpolation:@originally_textF:	@mido;		;
"prefix;@;"prefix;iÏ;@:@whitespace_after0:@before0:@whitespace_beforei;iÏ:@aftero;;F;o;		;
"property;@;"property;iÏ;@;0;o;;:originally_text;o:Sass::Script::String	;@:
@type:identifier:@value"-;iÏ;@;F;0;0;iÏ;0;0;iÏ;0;@:@children[ ;iÏ[o:Sass::Tree::VariableNode:
@expro;
;@;{ ;[ ;"comma-list;iÈ;@:@children[ ;"new-list;iÈ:@guarded0o:Sass::Tree::EachNode;@:@has_childrenT;[o;;o;
;@;{ ;[o;	;"new_list;@;"new-list;iÊo;
;@;{ ;[o;	;"prefix;@;"prefix;iÊo;	;"v;@;"v;iÊ;"prefixed-for-transition;iÊ;"append;iÊ;@;[ ;"new-list;iÊ;0;iÉ:	@var"v:
@listo;	;"property;@;"property;iÉo:Sass::Tree::ReturnNode	;o;	;"new_list;@;"new-list;iÌ;@;[ ;iÌ;"prefixed-for-transition;iÆo;
;@;	[ ;;;["7/* Checks if the value given is a unit of time. */;iÖo;3;@;T; [[o;!;""
value;@;"
value0;	[u;#ù[o:Sass::Script::Operation
:@options{ :@operator:eq:@operand2o:Sass::Script::String	;@:
@type:identifier:@value"number:
@lineiØ;iØ:@operand1o:Sass::Script::Funcall
;@:@keywords{ :
@args[o:Sass::Script::Variable	:@underscored_name"
value;@:
@name"
value;iØ;"type-of;iØu:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:
@expro:Sass::Script::Bool:@options{ :@valueF:
@lineiÛ;@	:@children[ ;
iÛ[o:Sass::Tree::ReturnNode	:
@expro:!Sass::Script::UnaryOperation	;@;:not;iÙ:@operando;	;@;;;iÙ;o;
;@;{ ;[o:Sass::Script::List	:@separator:
space;@;[o;
	;@;;;"s;iÙo;
	;@;;;"ms;iÙ;iÙo;
;@;{ ;[o;	;"
value;@;"
value;iÙ;"	unit;iÙ;"
index;iÙ;@:@children[ ;iÙ;"is-time;i×;i